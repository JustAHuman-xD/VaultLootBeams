plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'java-library'
}

apply plugin: 'org.spongepowered.mixin'

group = project.group_name
version = project.mod_version

java {
    archivesBaseName = "${archives_base_name}-${minecraft_version}"
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}-${minecraft_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    api fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")

    implementation fg.deobf("curse.maven:vault-hunters-official-mod-458203:${vault_hunters_version}")
    implementation fg.deobf("curse.maven:curios-309927:${curios_version}")

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
    debug.verbose = true
    debug.export = true
}

processResources {
    inputs.property "version", project.version
    filesMatching('META-INF/mods.toml') {
        expand version: project.version,
                mod_id: project.mod_id,
                mod_name: project.mod_name
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${mod_id}",
                "Specification-Vendor": "${mod_id}sareus",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "${mod_id}sareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}